<?xml version="1.0" encoding="UTF-8"?>
<project name="module_validatexsd" default="compile.module.validatexsd">
  <dirname property="module.validatexsd.basedir" file="${ant.file.module_validatexsd}"/>
  
  <property name="module.jdk.home.validatexsd" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.validatexsd" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.validatexsd" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.validatexsd" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="validatexsd.output.dir" value="${module.validatexsd.basedir}/../bin/production/ValidateXSD"/>
  <property name="validatexsd.testoutput.dir" value="${module.validatexsd.basedir}/../bin/test/ValidateXSD"/>
  
  <path id="validatexsd.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="validatexsd.module.production.classpath">
    <path refid="${module.jdk.classpath.validatexsd}"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${basedir}/lib/unittests/hamcrest-library-1.3.jar"/>
    <pathelement location="${basedir}/lib/unittests/junit-4.12.jar"/>
    <pathelement location="${basedir}/lib/unittests/jhades-1.0.4.jar"/>
  </path>
  
  <path id="validatexsd.runtime.production.module.classpath">
    <pathelement location="${validatexsd.output.dir}"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${basedir}/lib/unittests/hamcrest-library-1.3.jar"/>
    <pathelement location="${basedir}/lib/unittests/junit-4.12.jar"/>
    <pathelement location="${basedir}/lib/unittests/jhades-1.0.4.jar"/>
  </path>
  
  <path id="validatexsd.module.classpath">
    <path refid="${module.jdk.classpath.validatexsd}"/>
    <pathelement location="${validatexsd.output.dir}"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${basedir}/lib/unittests/hamcrest-library-1.3.jar"/>
    <pathelement location="${basedir}/lib/unittests/junit-4.12.jar"/>
    <pathelement location="${basedir}/lib/unittests/jhades-1.0.4.jar"/>
  </path>
  
  <path id="validatexsd.runtime.module.classpath">
    <pathelement location="${validatexsd.testoutput.dir}"/>
    <pathelement location="${validatexsd.output.dir}"/>
    <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${basedir}/lib/unittests/hamcrest-library-1.3.jar"/>
    <pathelement location="${basedir}/lib/unittests/junit-4.12.jar"/>
    <pathelement location="${basedir}/lib/unittests/jhades-1.0.4.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.validatexsd">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.validatexsd">
    <patternset refid="excluded.from.module.validatexsd"/>
  </patternset>
  
  <path id="validatexsd.module.sourcepath">
    <dirset dir="${module.validatexsd.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="validatexsd.module.test.sourcepath">
    <dirset dir="${module.validatexsd.basedir}">
      <include name="test"/>
      <include name="testdata"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.validatexsd" depends="compile.module.validatexsd.production,compile.module.validatexsd.tests" description="Compile module ValidateXSD"/>
  
  <target name="compile.module.validatexsd.production" depends="register.custom.compilers" description="Compile module ValidateXSD; production classes">
    <mkdir dir="${validatexsd.output.dir}"/>
    <javac2 destdir="${validatexsd.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.validatexsd}/javac">
      <compilerarg line="${compiler.args.validatexsd}"/>
      <bootclasspath refid="validatexsd.module.bootclasspath"/>
      <classpath refid="validatexsd.module.production.classpath"/>
      <src refid="validatexsd.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.validatexsd"/>
    </javac2>
    
    <copy todir="${validatexsd.output.dir}">
      <fileset dir="${module.validatexsd.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.validatexsd.tests" depends="register.custom.compilers,compile.module.validatexsd.production" description="compile module ValidateXSD; test classes" unless="skip.tests">
    <mkdir dir="${validatexsd.testoutput.dir}"/>
    <javac2 destdir="${validatexsd.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.validatexsd}/javac">
      <compilerarg line="${compiler.args.validatexsd}"/>
      <bootclasspath refid="validatexsd.module.bootclasspath"/>
      <classpath refid="validatexsd.module.classpath"/>
      <src refid="validatexsd.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.validatexsd"/>
    </javac2>
    
    <copy todir="${validatexsd.testoutput.dir}">
      <fileset dir="${module.validatexsd.basedir}/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.validatexsd.basedir}/testdata">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.validatexsd" description="cleanup module">
    <delete dir="${validatexsd.output.dir}"/>
    <delete dir="${validatexsd.testoutput.dir}"/>
  </target>
</project>